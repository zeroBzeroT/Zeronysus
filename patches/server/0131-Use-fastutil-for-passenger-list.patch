From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlexProgrammerDE <40795980+AlexProgrammerDE@users.noreply.github.com>
Date: Wed, 20 Jul 2022 20:06:05 +0200
Subject: [PATCH] Use fastutil for passenger list


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index ac1df230416a6cb94241f2a60e5e19930319ba48..daf704413c4dfc524fc5e52324d7c2caf02cbee7 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -45,6 +45,10 @@ import org.bukkit.event.entity.EntityPortalEvent;
 import org.bukkit.plugin.PluginManager;
 // CraftBukkit end
 
+// Dionysus start
+import it.unimi.dsi.fastutil.objects.ObjectArrayList;
+// Dionysus end
+
 public abstract class Entity implements ICommandListener, KeyedObject { // Paper
 
     // CraftBukkit start
@@ -94,7 +98,7 @@ public abstract class Entity implements ICommandListener, KeyedObject { // Paper
     private static int entityCount = 1; // Paper - MC-111480 - ID 0 is treated as special for DataWatchers, start 1
     private int id;
     public boolean i; public boolean blocksEntitySpawning() { return i; } // Paper - OBFHELPER
-    public final List<Entity> passengers;
+    public final ObjectArrayList<Entity> passengers; // Dionysus
     protected int j;
     private Entity au;public void setVehicle(Entity entity) { this.au = entity; } // Paper // OBFHELPER
     public boolean attachedToPlayer;
@@ -214,7 +218,7 @@ public abstract class Entity implements ICommandListener, KeyedObject { // Paper
 
     public Entity(World world) {
         this.id = Entity.entityCount++;
-        this.passengers = Lists.newArrayList();
+        this.passengers = new ObjectArrayList<>(); // Dionysus
         this.boundingBox = Entity.c;
         this.width = 0.6F;
         this.length = 1.8F;
@@ -2906,7 +2910,7 @@ public abstract class Entity implements ICommandListener, KeyedObject { // Paper
     }
 
     public List<Entity> bF() {
-        return (List) (this.passengers.isEmpty() ? Collections.emptyList() : Lists.newArrayList(this.passengers));
+        return (List) (this.passengers.isEmpty() ? Collections.emptyList() : new ObjectArrayList<>(this.passengers)); // Dionysus
     }
 
     public boolean w(Entity entity) {
